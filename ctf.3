.TH ctf 3 "27 July 2019"

.SH NAME
\fBCTF_TEST\fR - Create a CTF test function

.SH SYNOPSIS

.B #include <libctf.h>

\fBCTF_TEST\fR(\fIname\fR, \fIbody\fR)

.SH DESCRIPTION
This is the API that goes with the \fBceeteef\fR(1) utility. Here is described
how to create tests which \fBceeteef\fR(1) can run from the compiled binary.

This API is meant primarily for C, for which C99 or above is necessary. C++11 or
above also works, but keep in mind that all the tests do not fit into C++
namespaces.

Create your tests with \fBCTF_TEST\fR. Compile your program with
\fBCTF_TESTS_ENABLED\fR defined to preserve the tests. \fBname\fR is a function
name. \fIbody\fR is a function body. The brackets around the body are not
necessary.

If the function neither crashes nor returns non-zero, the test has succeeded.
Otherwise, it fails. If there is no return statement at the end of the function,
the test succeeds when it reaches the end.

Output from a test to \fIstdout\fR and \fIstdout\fR will be displayed, including
messages about assertion failures and so on.

To preserve the test symbols, you may need to make a shared library with the
\fB-shared\fR option to the compiler. It is best to use little optimization, and
especially not link-time optimization, which removes "unused" symbols. The
library tries to mitigate this, but the best way around it is to not optimize
with your tests.

.SH EXAMPLE

This example will demonstrate how to write and execute a test. First, write it:

file "test.c":

.PD 0
.P
#include <libctf.h>
.P
#include <assert.h>
.P
#include <stdio.h>
.P

.P
CTF_TEST(hello_world,
.P
  printf("Hello, world!\\n");
.P
  fprintf(stderr, "Hello again, world!\\n");
.P
  assert(1 + 1 == 3);
.P
)
.PD

Now compile and run it:

.PD 0
.P
 $ cc -DCTF_TESTS_ENABLED -shared test.c # -shared exposes the symbols
.P
 $ ceeteef a.out
.P
-- hello_world --
.P
hello_world:Hello, world!
.P
hello_world:Hello again, world!
.P
hello_world:Assertion failed: (1 + 1 == 3), function hello_world, file test.c,
line 8.
.P
hello_world FAILED   Terminated by signal 6   Core dumped
.PD

.SH SEE ALSO

\fBceeteef\fR(1)

.SH AUTHOR
Written by Jude Melton-Houghton (jwmhjwmh@gmail.com).
